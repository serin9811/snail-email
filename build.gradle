plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'kr.snail-email'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.amazonaws:aws-java-sdk-bom:1.12.331'
	implementation 'software.amazon.awssdk:cognitoidentity:2.18.6'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'software.amazon.awssdk:cognitoidentityprovider:2.18.6'
	// QueryDSL
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
	implementation 'com.querydsl:querydsl-jpa:5.0.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	//useJUnitPlatform()
}
/* querydsl 에서 사용할 경로 지정*/
def querydslDir = 'src/main/generated'

/* JPA 사용 여부와 사용할 경로를 지정*/
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

/* build 시 사용할 SourceSet 추가 */
sourceSets {
	main.java.srcDir querydslDir
}

/* querydsl 이 compileClasspath 를 상속하도록 설정 */
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

/* querydsl 컴파일시 사용할 옵션 설정 */
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

compileQuerydsl.doFirst {
	if(file(querydslDir).exists() )
		delete(file(querydslDir))
}